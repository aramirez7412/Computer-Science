/*******************************************************************************
 * NAME     : Anthony Ramirez
 * CLASS    : CS1C
 * SECTION  : T/TH 6:00-8:50
 * DATE     : 9/9/14
 * ASSIGN #3: Student Class
 *******************************************************************************/

#include "Header.h"
#include "StudentClass.h"
#include "CS1CStudent.h"

//#define go
//#define
/******************************************************************************
 * Student Class
 * ----------------------------------------------------------------------------
 * This program
 * ------------------------------------------------------------------------------
 * INPUT:
 *
 * OUTPUT:
 *******************************************************************************/
#define StudentClassRun
int main()
{
	const int SIZE = 1;
	//D E C L A R A T I O N S
	Student testStudent("Test",
						"Standing",
						"000-000-0000",
						123456,
						0,
						0.0,
						'M');
	Student students[SIZE];

	CS1CStudent CS1CStudents[SIZE];

	int index;

	/***************************************************************************
	 * FUNCTION OutputHeader
	 * -------------------------------------------------------------------------
	 * This function will output the header
	 ***************************************************************************/
	OutputHeader(cout, "Anthony Ramirez", "CS1C",
				 "6:00-8:50 PM", 3, "Student Class", 'A');
	#ifdef StudentClassRun



	for(index = 0; index < SIZE; index++)
	{
		students[index].PropagateStudent();
		cout << endl;
	}

	for(index = 0; index < SIZE; index++)
	{
		CS1CStudents[index].PropagateCS1C();
	}




	#endif
	cout << "Testing Overloaded Constructor" << endl << endl;
	testStudent.PrintAll();
	cout << endl << endl;

	cout << left;
	cout << setw(17) << "Name" << setw(9) << "ID" << setw(14) << "Phone #"
		 << setw(5)  << "Age"  << setw(4) << "Gend"
		 << setw(10) << "Class Standing" << endl;
	for(index = 0; index < SIZE; index++)
	{
		students[index].PrintAll();

	}

//	test.PrintCS1C();

	return 0;
}
