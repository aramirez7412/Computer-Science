/*******************************************************************************
 * NAME     : Anthony Ramirez
 * CLASS    : CS1C
 * SECTION  : T/TH 6:00-8:50
 * DATE     : 10/14/14
 * ASSIGN #8: Friends and Operator Overloading
 *******************************************************************************/

#include "StudentClass.h"
/*******************************
 * Student Class Implementation*
 *******************************/


bool checkId(const Student& CS1CStudent, const Student& MathStudent)
{
	return CS1CStudent.id == MathStudent.id;
}

bool operator == (const CS1CStudent& studentRHS)
{
	return this->id == studentRHS.id;
}
/*******************************************************************************
 * Student (Default Constructor)
 * -----------------------------------------------------------------------------
 * This constructor will initialize all of the private members of the Student
 * class
 *******************************************************************************/
Student::Student(): name		 (" "),
					classStanding(" "),
					phoneNumber  (" "),
					id           (0),
					age		     (0),
					gpa		     (0),
					gender	     (' ')
{
	//Empty body
}

/*******************************************************************************
 * Student (Destructor)
 * -----------------------------------------------------------------------------
 * This destructor will destruct the virtual table
 *******************************************************************************/
Student::~Student()
{
	cout << "\nStudent virtual destructor called" << endl;
}

/***************************************************************************
 * Student Constructor (non-default)
 * -------------------------------------------------------------------------
 * This is the non-default constructor for the student class and will
 * initialize private members to the parameters being passed in
 *
 * Returns: All private members initialized to respective parameter
 ***************************************************************************/
Student::Student(string 	    newName,
				 string 	    newStanding,
				 string 	    newNumber,
				 long 		    newId,
				 unsigned short newAge,
				 double 	    newGpa,
				 char 		    newGender
				)
{
	SetAll(newName, newStanding, newNumber, newId, newAge, newGpa, newGender);
}

/***************************************************************************
 * SetName
 * -------------------------------------------------------------------------
 * This method will set -name by assigning the value of newName
 *
 * Returns: All private members initialized to respective parameter
 ***************************************************************************/
void Student::SetName	(string newName)
{
	name = newName;
}

/***************************************************************************
 * SetStanding
 * -------------------------------------------------------------------------
 * This method will set -classStanding by assigning the value of newStanding
 *
 * Returns: classStanding = newStanding;
 ***************************************************************************/
void Student::SetStanding(string newStanding)
{
	classStanding = newStanding;
}

/***************************************************************************
 * SetNumber
 * -------------------------------------------------------------------------
 * This method will set -phoneNumber by assigning the value of newNumber
 *
 * Returns: -phoneNumber = newNumber;
 ***************************************************************************/
void Student::SetNumber(string newNumber)
{
	phoneNumber = newNumber;
}

/***************************************************************************
 * SetAge
 * -------------------------------------------------------------------------
 * This method will set -age by assigning the value of newAge
 *
 * Returns: age = newAge;
 ***************************************************************************/
void Student::SetAge(unsigned short newAge)
{
	 age = newAge;
}

/***************************************************************************
 * SetGpa
 * -------------------------------------------------------------------------
 * This method will set -gpa by assigning the value of newGpa
 *
 * Returns: -gpa = newGpa;
 ***************************************************************************/
void Student::SetGpa(double newGpa)
{
	gpa = newGpa;
}

/***************************************************************************
 * SetGender
 * -------------------------------------------------------------------------
 * This method will set -gender by assigning the value of newGender
 *
 * Returns: -gender = newGender;
 ***************************************************************************/
void Student::SetGender(char newGender)
{
	gender = newGender;
}

/***************************************************************************
 * SetId
 * -------------------------------------------------------------------------
 * This method will set -id by assigning the value of newId
 *
 * Returns: -id = newId;
 ***************************************************************************/
void Student::SetId      (long newId)
{
	id = newId;
}

/***************************************************************************
 * SetAll
 * -------------------------------------------------------------------------
 * This method will set all private members
 *
 * Returns: All members will be assigned a value
 ***************************************************************************/
void Student::SetAll(string 		   newName,
					 string 		   newStanding,
					 string 		   newNumber,
					 long   		   newId,
					 unsigned short    newAge,
					 double 		   newGpa,
					 char 		       newGender)

{
	//Calls all set methods to initialize all
	SetName    (newName);
	SetStanding(newStanding);
	SetNumber  (newNumber);
	SetId      (newId);
	SetAge     (newAge);
	SetGpa     (newGpa);
	SetGender  (newGender);
}

/***************************************************************************
 * GetName (const)
 * -------------------------------------------------------------------------
 * This method will return the name of the object
 *
 * Returns: string (-name member is returned)
 ***************************************************************************/
string 	Student::GetName() const
{
	return name;
}

/***************************************************************************
 * GetStanding
 * -------------------------------------------------------------------------
 * This method will return the class standing of the object
 *
 * Returns: string (-classStanding)
 ***************************************************************************/
string 	Student::GetStanding() const
{
	return classStanding;
}

/***************************************************************************
 * GetNumber
 * -------------------------------------------------------------------------
 * This method will return the phone number of the object
 *
 * Returns: string(-phoneNumber)
 ***************************************************************************/
string 	Student::GetNumber() const
{
	return phoneNumber;
}

/***************************************************************************
 * GetId
 * -------------------------------------------------------------------------
 * This method will return the id of the object
 *
 * Returns: long(-id)
 ***************************************************************************/
long  Student::GetId() const
{
	return id;
}

/***************************************************************************
 * GetNewAge
 * -------------------------------------------------------------------------
 * This method will return the age of the object
 *
 * Returns: string(-age)
 ***************************************************************************/
unsigned short Student::GetAge() const
{
	return age;
}

/***************************************************************************
 * GetNumber
 * -------------------------------------------------------------------------
 * This method will return the phone number of the object
 *
 * Returns: string(-phoneNumber)
 ***************************************************************************/
double Student::GetGpa() const
{
	return gpa;
}

/***************************************************************************
 * GetGender
 * -------------------------------------------------------------------------
 * This method will return the gender of the object
 *
 * Returns: string(-gender)
 ***************************************************************************/
char Student::GetGender() const
{
	return gender;
}


/***************************************************************************
 * PromptUserForInput
 * -------------------------------------------------------------------------
 * This method will prompt the user for each input
 *
 * Returns:
 ***************************************************************************/
void Student::PropagateStudent()
{
	const int	   WIDTH = 21;
	string 		   newName;
	long   		   newId;
	string		   newNumber;
	unsigned short newAge;
	char           newGender;
	string         newStanding;
	double		   newGpa;

	cout << "\nEnter the proper information to continue.\n";


		cout << setw(WIDTH) << "Enter Name: " ;
		getline(cin, newName);
		SetName(newName);

		cout << setw(WIDTH) << "Enter ID: ";
		cin  >> newId;
		SetId(newId);
		cin.ignore(numeric_limits<streamsize>::max(), '\n');

		cout << setw(WIDTH) << "Enter phone number: ";
		getline(cin, newNumber);
		SetNumber(newNumber);

		cout << setw(WIDTH) << "Enter age: ";
		cin  >> newAge;
		cin.ignore(numeric_limits<streamsize>::max(), '\n');

		SetAge(newAge);

		cout << setw(WIDTH) << "Enter Gender: ";
		cin.get(newGender);
		cin.ignore(numeric_limits<streamsize>::max(), '\n');

		SetGender(newGender);

		cout << setw(WIDTH) << "Enter Class Standing: ";
		getline(cin, newStanding);

		SetStanding(newStanding);

		cout << setw(WIDTH) << "Enter GPA: ";
		cin  >> newGpa;
		cin.ignore(numeric_limits<streamsize>::max(), '\n');

		SetGpa(newGpa);


}

/***************************************************************************
 * PrintAll
 * -------------------------------------------------------------------------
 * This method will print the attributes of the object
 *
 * Returns: none
 ***************************************************************************/
void Student::PrintAll() const
{
	const int WIDTH = 22;

	cout << fixed 			      << setprecision(2) << left;
	cout << setw(WIDTH)       << "Name: " 		    << GetName()    << endl;
	cout << setw(WIDTH)       << "ID: " 	        << GetId()      << endl;
	cout << setw(WIDTH)       << "Number: "         << GetNumber()  << endl;
	cout << setw(WIDTH)       << "Age: " 		    << GetAge()     << endl;
	cout << setw(WIDTH)       << "Gender: "	        << GetGender()  << endl;
	cout << setw(WIDTH)       << "Standing: "       << GetStanding()<< endl;
	cout << setw(WIDTH)       << "GPA: " 		    << GetGpa()     << endl;
	cout << right;
}
